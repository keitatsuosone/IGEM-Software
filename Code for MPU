#include <SD.h>
#include <SPI.h>
#include <JPEGDecoder.h>

const int CS_PIN = 5;

void setup() {
  Serial.begin(115200);
  
  if (!SD.begin(CS_PIN)) {
    Serial.println("Card Initialization failed!");
    return;
  }
  Serial.println("SD card initialized.");
}

void loop() {
  // Attempt to decode the JPEG file
  if (JpegDec.decodeFile("/sample.jpg") == 0) {
    int32_t meanValue = getMeanGreyValue();
    saveMeanValue(meanValue);
  } else {
    Serial.println("Failed to decode JPEG.");
  }
  
  delay(10000); // Delay to prevent continuous looping
}

int32_t getMeanGreyValue() {
  uint16_t *pImg;
  int32_t totalValue = 0;

  // Extract the pixel data
  pImg = JpegDec.pImage;
  int imgWidth = JpegDec.width;
  int imgHeight = JpegDec.height;

  for (int i = 0; i < imgWidth * imgHeight; i++) {
    uint16_t color = *pImg++;
    byte r = (color & 0xF800) >> 8;
    byte g = (color & 0x07E0) >> 3;
    byte b = (color & 0x001F) << 3;

    // As it's grayscale, R, G, and B values should be the same
    // So, just take one of them
    totalValue += r;
  }

  return totalValue / (imgWidth * imgHeight);
}

void saveMeanValue(int32_t meanValue) {
  File dataFile = SD.open("/meanValue.txt", FILE_WRITE);
  if (dataFile) {
    dataFile.println(meanValue);
    dataFile.close();
    Serial.println("Mean Grey Value saved!");
  } else {
    Serial.println("Error opening meanValue.txt");
  }
}
